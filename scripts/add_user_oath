#!/bin/bash
#
# Copyright (C) 2023 Thomas Mueller (tm-dd)
#
# This code is free software. You can use, redistribute and/or
# modify it under the terms of the GNU General Public Licence
# version 2, as published by the Free Software Foundation.
# This program is distributed without any warranty.
# See the GNU General Public Licence for more details.
#

## START SETTINGS

# the new name of the certificate 
userLogin="$1"

oathFile='/etc/users.oath'
clientConfigFolder='/openvpn_user_config/'${userLogin}'/'
qrCodeString='VPN ACME.ORG'
qrCodeFilePath="${clientConfigFolder}qr-code-totp.png"

## END OF SETTINGS

# check if parameter is missing
if [ -z "${userLogin}" ]
then
	echo "USAGE: ${0} login"
	exit -1
fi

# check if the login is available
userLoginFound=`getent passwd | grep "^${userLogin}:" | awk -F ':' '{ print $1 }'`
if [ -z "${userLoginFound}" ]
then
	echo "ERROR: login ${userLogin} not available on the local system"
	exit -1
fi

# check if the value is till exists
userOathFound=`grep -P "^HOTP/T30\t" "${oathFile}" | grep -P "\t${userLogin}\t"`
if [ -n "${userOathFound}" ]
then
	echo "ERROR: a value for oath for the user still exists in ${oathFile}"
	echo "$userOathFound"
	exit -1
fi

# create the secred
oathHexValue=`openssl rand -hex 20`
oathBase32Value=`echo "${oathHexValue}" | base16 -d | base32`
oathString=`echo -e "HOTP/T30\t${userLogin}\t-\t${oathHexValue}"`

# write the line for the user authentification
echo "${oathString}" >> "${oathFile}"

# if not created before, create the folder for the new picture
mkdir -p "${clientConfigFolder}"

# change ownership of the configuration folder, if useful and possible
# ownerAndGroup=`getent passwd | grep "^${userLogin}:" | awk -F ':' '{ print $3 ":" $4 }'`
ownerAndGroup='www-data:www-data'
chmod 700 "${clientConfigFolder}"
chown ${ownerAndGroup} "${clientConfigFolder}"

# crate the QR code
set -x 
qrencode -t PNG -o "${qrCodeFilePath}" -s 5 "otpauth://totp/${qrCodeString}?secret=${oathBase32Value}"
set +x

# allow downloading the configuration files
homeDirectory=`getent passwd | grep "^${userLogin}:" | awk -F ':' '{ print $6 }'`
if [ ! -e "${homeDirectory}/public_html" ]
then
	# create a home directory and setup a link
	mkdir -p "${homeDirectory}"
	( set -x; ln -s "${clientConfigFolder}" "${homeDirectory}/public_html" )
fi

# write a htaccess file to allow only the user to access the files
echo 'Options +FollowSymLinks +Multiviews +Indexes' > "${clientConfigFolder}.htaccess"
echo "require user ${userLogin}" >> "${clientConfigFolder}.htaccess"

# change ownership of the configuration files, if useful and possible
chmod 400 ${qrCodeFilePath}
chown -R ${ownerAndGroup} "${clientConfigFolder}"

# show files
( set -x; ls -la "${clientConfigFolder}" )

exit 0