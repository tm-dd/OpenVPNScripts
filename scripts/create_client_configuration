#!/bin/bash
#
# Copyright (C) 2023 Thomas Mueller (tm-dd)
#
# This code is free software. You can use, redistribute and/or
# modify it under the terms of the GNU General Public Licence
# version 2, as published by the Free Software Foundation.
# This program is distributed without any warranty.
# See the GNU General Public Licence for more details.
#

# the new name of the certificate 
userLogin="$1"

# read settings from config.cfg
source "`dirname $0`/config.cfg"

# check if parameter is missing
if [ -z "${userLogin}" ]
then

	echo "USAGE: $0 LOGIN"
	exit -1
fi

# if not exists, create the directory for the new files
mkdir -p "${clientConfigFolder}"

# change ownership of the configuration folder
chmod 700 "${clientConfigFolder}"
chown ${clientConfigFilesOwnerAndGroup} "${clientConfigFolder}"

# check and stop, if somnething is missing
if [ ! -d "${clientConfigTemplateDir}" ] || [ ! -d "${clientConfigFolder}" ] || [ ! -e "${caServerCrtChainFile}" ] || [ ! -e "${caClientKeyFile}" ] || [ ! -e "${caClientCrtFile}" ]
then
	echo "ERROR: something is missing or wrong"
	( set -x; ls -ld "${clientConfigTemplateDir}" "${clientConfigFolder}" "${caServerCrtChainFile}" "${caClientKeyFile}" "${caClientCrtFile}" )
	exit -1
fi

# read the values
caChainText=`cat ${caServerCrtChainFile}`
clientKeyText=`cat ${caClientKeyFile}`
clientCertText=`cat ${caClientCrtFile}`

# copy and edit die configuration files
cp -a ${clientConfigTemplateDir}*.ovpn "${clientConfigFolder}"
cd "${clientConfigFolder}"
for config in *.ovpn
do

	# insert the CA chain
	while read newLine; do
		echo -e "${newLine//###_CA_CERT_CHAIN_###/${caChainText}}"
	done < "${config}" > "${config}.new"
	mv "${config}.new" "${config}"

	# insert the user certificate
	while read newLine; do
		echo -e "${newLine//###_USER_CERT_###/${clientCertText}}"
	done < "${config}" > "${config}.new"
	mv "${config}.new" "${config}"

	# insert the user private key
	while read newLine; do
		echo -e "${newLine//###_USER_KEY_###/${clientKeyText}}"
	done < "${config}" > "${config}.new"
	mv "${config}.new" "${config}"
	
done

# allow downloading the configuration files
homeDirectoryLDAP=`getent passwd | grep "^${userLogin}:" | awk -F ':' '{ print $6 }'`
homeDirectoryLocal="/home/${userLogin}"
if [ "${homeDirectoryLocal}" != "${homeDirectoryLDAP}" ]
then
	echo "WARNING: The LDAP home directory '${homeDirectoryLDAP}' differs to the local directory '${homeDirectoryLocal}' with the configuration files. The user CAN'T DOWNLOAD ANY private CONFIGURATION FILE until this problem will be fixed."
fi
if [ ! -e "${homeDirectoryLocal}/public_html" ]
then
	# create a home directory and setup a link
	mkdir -p "${homeDirectoryLocal}"
	(set -x; ln -s "${clientConfigFolder}" "${homeDirectoryLocal}/public_html" )
fi

# write a htaccess file to allow only the user to access the files
echo 'Options +FollowSymLinks +Multiviews +Indexes' > "${clientConfigFolder}.htaccess"
echo "require user ${userLogin}" >> "${clientConfigFolder}.htaccess"

# change ownership of the configuration files, if useful and possible
chmod 400 ${clientConfigFolder}/*.ovpn
chown -R ${clientConfigFilesOwnerAndGroup} "${clientConfigFolder}"

# show files
( set -x; ls -la "${homeDirectoryLocal}/public_html/" )

exit 0